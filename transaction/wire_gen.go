// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"github.com/mmcloud/solder/pkg/app"
	"github.com/mmcloud/solder/pkg/command"
	"github.com/mmcloud/solder/pkg/config"
	"github.com/mmcloud/solder/pkg/interfaces"
	"github.com/mmcloud/solder/pkg/logging"
	"github.com/mmcloud/solder/pkg/service"
)

// Injectors from wire.go:

func Solder(ctx context.Context) (interfaces.App, error) {
	commander := command.ProviderCommander()
	configPath := config.ProvideDefaultConfig()
	viper, err := config.NewViper(configPath)
	if err != nil {
		return nil, err
	}
	interfacesConfig, err := config.LoadConfig(viper)
	if err != nil {
		return nil, err
	}
	logger, err := logging.ProvideLogger(interfacesConfig)
	if err != nil {
		return nil, err
	}
	serviceFactory := service.ProvideServiceFactory(logger, commander, interfacesConfig)
	interfacesApp := app.NewApp(commander, interfacesConfig, logger, serviceFactory)
	return interfacesApp, nil
}
