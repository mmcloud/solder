// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	constants "github.com/mmcloud/solder/pkg/constants"

	mock "github.com/stretchr/testify/mock"
)

// LoggingConfig is an autogenerated mock type for the LoggingConfig type
type LoggingConfig struct {
	mock.Mock
}

// GetLevel provides a mock function with given fields:
func (_m *LoggingConfig) GetLevel() constants.Level {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetLevel")
	}

	var r0 constants.Level
	if rf, ok := ret.Get(0).(func() constants.Level); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(constants.Level)
	}

	return r0
}

// GetLoggerKind provides a mock function with given fields:
func (_m *LoggingConfig) GetLoggerKind() constants.LoggerKind {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetLoggerKind")
	}

	var r0 constants.LoggerKind
	if rf, ok := ret.Get(0).(func() constants.LoggerKind); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(constants.LoggerKind)
	}

	return r0
}

// NewLoggingConfig creates a new instance of LoggingConfig. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewLoggingConfig(t interface {
	mock.TestingT
	Cleanup(func())
}) *LoggingConfig {
	mock := &LoggingConfig{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
